#include <iostream>
using namespace std;

/*
! 函数调用运算符重载
! 函数调用运算符 ()  也可以重载
! 由于重载后使用的方式非常像函数的调用，因此称为仿函数
* 仿函数没有固定写法，非常灵活
 */

// todo 打印类
class MyPrint
{
public:
  void operator()(string text)
  {
    cout << text << endl;
  }
};
void test01()
{
  // !重载的（）操作符 也称为仿函数 因为使用起来非常类似于函数调用
  MyPrint myFunc;
  myFunc("hello world");
}

// todo 加法类
class MyAdd
{
public:
  int operator()(int v1, int v2)
  {
    return v1 + v2;
  }
};

void test02()
{
  MyAdd add;
  int ret = add(10, 10); // todo 这里的()就是调用了?加法类重载的函数调用运算符
  cout << "ret = " << ret << endl;

  // todo 匿名对象调用    MyAdd()：创建一个匿名对象  不需要像?MyAdd add
  cout << "MyAdd()(100,100) = " << MyAdd()(100, 100) << endl;
}

int main()
{

  test01();
  test02();

  system("pause");

  return 0;
}