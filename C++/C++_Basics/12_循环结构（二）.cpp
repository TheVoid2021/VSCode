/*4、猜数字游戏
编程先由计算机随机生成一个1-100之间的数，让游戏者猜。
如果猜对了，在屏幕上输出人猜了多少次才猜对此数，
以此来反映猜数者“猜”的水平；否则计算机给出提示，
告诉人所猜的数是太大还是太小，最多可以猜10次，
如果猜了10次仍未猜中，则结束游戏。
*/
#include <iostream>
#include <ctime>
using namespace std;

int main()
{
  int x;           // x的值由计算机随机产生
  int guess;       // 用户猜的数，从键盘输入
  int counter = 0; // 记录用户猜数的次数
  srand(time(NULL));
  x = rand() % 100 + 1;
  cout << "***欢迎参加猜数游戏，我已产生一个1~100的数，请猜吧，哈哈哈***" << endl;
  do
  {
    cout << "请输入你猜的数：";
    cin >> guess;
    counter++;
    if (guess > x)
      cout << "错误，你猜的数太大了！" << endl;
    else if (guess < x)
      cout << "错误，你猜的数太小了！" << endl;
  } while (guess != x);
  cout << "***恭喜你，猜对了，真是天才！你一共猜了" << counter << "次***" << endl;
  system("pause");
  return 0;
}

/*
1、srand(time(NULL));这条指令的意思是利用系统时间来初始化系统随机
数的种子值，使得每次运行由于时间不同产生而产生不同的随机数序列。

2、rand()函数在产生随机数前，需要系统提供的生成伪随机数序列的种子，
rand根据这个种子的值产生一系列随机数。如果系统提供的种子没有变化，
每次调用rand函数生成的伪随机数序列都是一样的。

3、通常可以利用系统时间来改变系统的种子值，即srand(time(NULL))，
可以为提供不同的种子值，进而产生不同的随机数序列。

4、用rand函数产生1-100的随机数：rand()%100+1;
这里利用了求余数运算符(％)，它可以获得整除之后的余数。
当使用通过 rand 函数返回的正整数除以100时，余数将是 0-99的数字。
因为目标是1-100的数字，所以只需要给余数加1即可；
如果需要100-200之间的随机数，则写成：rand()%100+100
*/
